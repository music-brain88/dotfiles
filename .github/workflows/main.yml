# Dotfiles CI ワークフロー
# このワークフローは dotfiles のリント、ビルド、およびデプロイを自動化します。
name: build


on:
  push:
    paths-ignore:
      - 'README.md'
      - '.github/PULL_REQUEST_TEMPLATE.md'


jobs:
  # シェルスクリプトの静的解析を行うジョブ
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # shellcheck のインストール
      - name: Run shellcheck
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: '.bin'  # '.bin' ディレクトリ内のシェルスクリプトをチェック

 # dotfiles のビルドとテストを行うジョブ
  build-and-test:
    needs: lint  # lint ジョブが成功した後にのみ実行
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ['ubuntu:latest', 'archlinux:base-devel']
        # container: ['ubuntu:latest', 'archlinux:base-devel', 'amazonlinux:2023']
    container: ${{ matrix.container }}

    steps:
      # リポジトリのチェックアウト
      - uses: actions/checkout@v4

      # システムの更新と必要なパッケージのインストール
      - name: Set up environment
        run: |

          if [ "${{ matrix.container }}" = "archlinux:base-devel" ]; then

            # Arch Linux
            pacman -Syu --noconfirm
            pacman -S --noconfirm neovim tmux fish curl git sudo tar

          else
            # Ubuntu
            apt-get update
            apt-get install -y neovim tmux fish curl git build-essential sudo tar

          fi


      # 依存関係のキャッシュ
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |

            ~/.cargo/registry
            ~/.cargo/git
            ~/.cache/dein
          key: ${{ runner.os }}-${{ matrix.container }}-deps-${{ hashFiles('**/Cargo.lock', '.bin/utils/setup_neovim.sh') }}

      # Rust のインストール
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          export PATH="$HOME/.cargo/bin:$PATH"

      # セットアップスクリプトの実行
      - name: Run setup scripts
        run: |
          .bin/utils/setup_directories.sh
          .bin/utils/setup_base.sh
          .bin/utils/setup_symlinks.sh
          .bin/utils/setup_rust_tools.sh
          .bin/utils/setup_neovim.sh
          .bin/utils/setup_shell.sh
          .bin/utils/setup_tmux.sh
          .bin/utils/setup_git.sh


      # インストールの検証
      - name: Verify installation
        run: |
          fish -c "echo 'Fish shell is working'"
          nvim --version
          cargo --version
          tmux -V

          git --version

      # dotfilesのテスト
      - name: Test dotfiles
        run: |

          source ~/.bashrc
          fish -c "source ~/.config/fish/config.fish"
          tmux new-session -d "echo 'Tmux is working'"
          git config --list
